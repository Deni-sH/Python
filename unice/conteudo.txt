A primeira seria o armazenamento de dados: Na arquitetura de Von-Neumann, os dados e o código são armazenados na mesma memória e acessados por meio de um único barramento, enquanto na arquitetura de Harvard, os dados e o código são armazenados em memórias separadas e acessados por barramentos diferentes.
Segunda: Unidade de controle: Na arquitetura de Von-Neumann, a unidade de controle busca instruções e dados da memória em sequência ( memória programa  + dados), enquanto na arquitetura de Harvard, a unidade de controle pode buscar instruções e dados simultaneamente de suas memórias separadas.
Ex: Von-Newmann : Calculadora, ela executa o cálculo e na sequência vem o resultado. já se for necessário algo mais complexo como o processamento de imagens, essa arquitetura pode se tornar um gargalo no desempenho devido à limitação do acesso sequencial à memória compartilhada. Nesses casos, a arquitetura de Harvard pode oferecer melhor desempenho, pois permite acesso simultâneo e independente a memórias separadas de instruções e dados.
3ª seria a flexibilidade, na arquitetura de Von-Neumann, as instruções e dados são armazenados em uma única memória compartilhada, o que permite que as instruções sejam facilmente modificadas em tempo de execução pelo próprio programa, se necessário. Isso ocorre porque a unidade de controle pode acessar e modificar a memória de instruções da mesma forma que acessa e modifica a memória de dados. Por outro lado, na arquitetura de Harvard, as memórias de instruções e dados são separadas e não podem ser acessadas simultaneamente pela unidade de controle. Isso pode limitar a flexibilidade do programa em tempo de execução, tornando mais difícil modificar as instruções.
